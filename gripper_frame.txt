
	case 'n':
		ShowCommand("COM: Approach\n");
		ca = 0, 0, 1;
		wa = C2W_transform(pos) * ca;
		if (cbox == CARTESIAN)
		{
			for (int i = 0; i < 3; i++)
				speed[i + 1] = wa(i + 1, 1) * linear_speed_limit[speed_mode];
			new_status = true;
		}
		else cout << "[Warning!]: speed assignment without selecting a CBOX." << endl;
		break;

	case 'm':
		ShowCommand("COM: Retreat\n");
		ca = 0, 0, -1;
		wa = C2W_transform(pos) * ca;
		if (cbox == CARTESIAN)
		{
			for (int i = 0; i < 3; i++)
				speed[i + 1] = wa(i + 1, 1) * linear_speed_limit[speed_mode];
			new_status = true;
		}
		else cout << "[Warning!]: speed assignment without selecting a CBOX." << endl;
		break;


	case '2':
		ShowCommand("COM: Relative Right\n");
		ca = 1, 0, 0;
		wa = C2W_transform2(pos) * ca;
		if (cbox == CARTESIAN)
		{
			for (int i = 0; i < 3; i++)
				speed[i + 1] = wa(i + 1, 1) * linear_speed_limit[speed_mode];
			new_status = true;
		}
		else cout << "[Warning!]: speed assignment without selecting a CBOX." << endl;
		break;
	case '3':
		ShowCommand("COM: Relative Left\n");
		ca = -1, 0, 0;
		wa = C2W_transform2(pos) * ca;
		if (cbox == CARTESIAN)
		{
			for (int i = 0; i < 3; i++)
				speed[i + 1] = wa(i + 1, 1) * linear_speed_limit[speed_mode];
			new_status = true;
		}
		else cout << "[Warning!]: speed assignment without selecting a CBOX." << endl;
		break;